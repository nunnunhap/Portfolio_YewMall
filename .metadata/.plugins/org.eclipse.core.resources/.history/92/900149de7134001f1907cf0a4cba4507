package com.yewmall.basic.kakaologin;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpHeaders;
import org.springframework.stereotype.Service;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
@RequiredArgsConstructor
public class KakaoLoginService {
	
	// DI
	private final KakaoMapper kakaoMapper;
	
	
	@Value("${kakao.client.id}")
	private String clientid;
	
	@Value("${kakao.redirect.uri}")
	private String redirect;
	
	@Value("${kakao.client.secret}")
	private String clientSecret;
	
	@Value("${kakao.oauth.tokenuri}")
	private String tokenUri;
	
	
	// 엑세스 토큰을 받기 위한 정보
	/* https://kauth.kakao.com/oauth/token 주소 호출
	 * 요청방식 post
	 * header : Content-type: application/x-www-form-urlencoded;charset=utf-8
	 * body :
	 * grant_type : authorization_code
	 * client_id : 앱 REST API 키
	 * redirect_uri : 인가 코드가 리다이렉트된 URI
	 * code : 인가 코드 받기 요청으로 얻은 인가 코드
	 * client_secret : 토큰 발급 시, 보안을 강화하기 위해 추가 확인하는 코드
	 */
	public String getAccessToken(String code) {
		// 1) Http Header 생성
		HttpHeaders headers = new HttpHeaders();
		headers.add("Content-type", "application/x-www-form-urlencoded;charset=utf-8");
		
		// 2) Http Body 생성
		MultiValueMap<String, String> body = new LinkedMultiValueMap<>();
		body.add("grant_type", "authorization_code");
		body.add("client_id", clientid);
		body.add("redirect_uri", "");
		body.add("", "");
		body.add("", "");
		
		
		
		
		
		return "";
	}
	
	
	
	
	
	
	
	
}
